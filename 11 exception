package VasanthKumar;
import java.util.*;
class ExceptionHandling {
public static void main(String[] args) {
Scanner scanner = new Scanner(System.in);
while (true) {
System.out.println("Choose an exception to check:\n1. ArithmeticException\n2. ArrayIndexOutOfBoundsException\n3. NumberFormatException\n4. StringIndexOutOfBoundsException\n5. NullPointerException\n6. EXIT");
int choice = scanner.nextInt();
try {
switch (choice) {
case 1:
System.out.println("Enter two numbers (numerator and denominator):");
int numerator = scanner.nextInt();
int denominator = scanner.nextInt();
int result = numerator / denominator;
System.out.println("Result: " + result);
break;
case 2:
System.out.println("Enter the size of the array:");
int arraySize = scanner.nextInt();
int[] array = new int[arraySize];
System.out.println("Enter the index to access:");
int index = scanner.nextInt();
int value = array[index];
System.out.println("Value: " + value);
break;
case 3:
System.out.println("Enter a string representing an integer:");
String integerString = scanner.next();
int number = Integer.parseInt(integerString);
System.out.println("Parsed Integer: " + number);
break;
case 4:
System.out.println("Enter a string:");
String inputString = scanner.next();
System.out.println("Enter the index to access:");
int stringIndex = scanner.nextInt();
char character = inputString.charAt(stringIndex);
System.out.println("Output: " + character);
break;
case 5:
String nullString = null;
System.out.println(nullString.length());
break;
case 6:
System.out.println("Exiting program.");
System.exit(0);
default:
System.out.println("Invalid choice.");
}
} catch (ArithmeticException e) {
System.out.println("ArithmeticException: " + e.getMessage());
} catch (ArrayIndexOutOfBoundsException e) {
System.out.println("ArrayIndexOutOfBoundsException: " + e.getMessage());
} catch (NumberFormatException e) {
System.out.println("NumberFormatException: " + e.getMessage());
} catch (StringIndexOutOfBoundsException e) {
System.out.println("StringIndexOutOfBoundsException: " + e.getMessage());
} catch (NullPointerException e) {
System.out.println("NullPointerException: " + e.getMessage());
}
}
}
}
